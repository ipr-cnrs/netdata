---
# .. vim: foldmarker=[[[,]]]:foldmethod=marker
#
# tasks file for netdata

# Manage base system packages [[[1
- name: Ensure base packages are in there desired state
  ansible.builtin.package:
    name: '{{ netdata__base_packages | flatten }}'
    state: '{{ "present" if (netdata__deploy_state == "present") else "absent" }}'
    install_recommends: '{{ netdata__install_recommends | bool }}'
  register: pkg_result
  until: pkg_result is success

# Server Manage /etc configuration files [[[1
- name: Ensure Netdata directory structure exists
  ansible.builtin.file:
    path: '/etc/netdata/{{ item.path }}'
    state: directory
    owner: 'root'
    group: 'netdata'
    mode: '0755'
  with_filetree:
    - '{{ netdata__host_etc_src }}'
    - '{{ netdata__group_etc_src }}'
    - '{{ netdata__etc_src }}'
    - '{{ netdata__default_etc_src }}'
  when: (item.state == 'directory') and (netdata__deploy_state == "present")
  notify: ['Restart Netdata service']

- name: Generate Netdata configuration files
  ansible.builtin.template:
    src: '{{ item.src }}'
    dest: "/etc/netdata/{{ item.path | replace('.j2','') }}"
    owner: 'root'
    group: 'netdata'
    mode: '{{ item.mode }}'
  with_filetree:
    - '{{ netdata__host_etc_src }}'
    - '{{ netdata__group_etc_src }}'
    - '{{ netdata__etc_src }}'
    - '{{ netdata__default_etc_src }}'
  when: (item.state == 'file') and (netdata__deploy_state == "present")
  notify: ['Restart Netdata service']

- name: Generate Netdata configuration symlinks
  ansible.builtin.template:
    src: '{{ item.src }}'
    dest: "/etc/netdata/{{ item.path | replace('.j2','') }}"
    state: 'link'
    force: true
  with_filetree:
    - '{{ netdata__host_etc_src }}'
    - '{{ netdata__group_etc_src }}'
    - '{{ netdata__etc_src }}'
    - '{{ netdata__default_etc_src }}'
  when: (item.state == 'link') and (netdata__deploy_state == "present")
  notify: ['Restart Netdata service']
